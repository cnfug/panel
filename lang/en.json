{
  "auth": {
    "session": {
      "expired": "session has expired",
      "missing": "Please enable cookies and try again",
      "invalid": "invalid session"
    }
  },
  "commands": {
    "panel:cert-renew": {
      "description": "[Panel] Certificate renewal"
    },
    "panel:monitoring": {
      "description": "[Panel] System Monitoring",
      "fail": "[Panel] System monitoring failed to save"
    },
    "panel": {
      "description": "[Panel] Command line",
      "forDeveloper": "Please use the following commands under the guidance of the developer",
      "use": "Please use the following commands",
      "tool": "command line tool",
      "portFail": "failed to get panel port",
      "port": "Panel port",
      "entrance": "Panel entrance",
      "update": {
        "description": "update/fix panel to latest version",
        "taskCheck": "There is currently a task being executed and updates are prohibited.",
        "dbFail": "panel database exception, operation terminated",
        "versionFail": "failed to get latest version",
        "fail": "update failed",
        "success": "update completed"
      },
      "getInfo": {
        "description": "reinitialize panel account information",
        "adminGetFail": "failed to get administrator information",
        "adminSaveFail": "failed to save administrator information",
        "passwordGenerationFail": "failed to generate password",
        "username": "Username",
        "password": "Password",
        "address": "Panel address"
      },
      "getPort": {
        "description": "get the panel access port"
      },
      "getEntrance": {
        "description": "get panel access"
      },
      "deleteEntrance": {
        "description": "delete panel access",
        "fail": "failed to delete panel entrance",
        "success": "panel entrance deleted successfully"
      },
      "cleanTask": {
        "description": "clean up running and waiting tasks in the panel [used when tasks are stuck]",
        "fail": "failed to clean up tasks",
        "success": "tasks cleaned up successfully"
      },
      "backup": {
        "description": "back up website/MySQL database/PostgreSQL database to the specified directory and retain the specified amount",
        "paramFail": "backup type, path, name and keep amount are required",
        "start": "start backup",
        "backupDirFail": "failed to create backup directory",
        "targetSite": "target website",
        "siteNotExist": "website does not exist",
        "backupFail": "backup failed",
        "backupSuccess": "backup successful",
        "mysqlBackupFail": "MySQL database backup failed",
        "targetMysql": "target MySQL database",
        "startExport": "start exporting",
        "exportFail": "export failed",
        "exportSuccess": "export successful",
        "startCompress": "start compressing",
        "compressFail": "compression failed",
        "compressSuccess": "compression successful",
        "startMove": "start moving",
        "moveFail": "move failed",
        "moveSuccess": "move successful",
        "databaseGetFail": "failed to get database",
        "databaseNotExist": "database does not exist",
        "targetPostgres": "target PostgreSQL database",
        "cleanBackup": "clean backup",
        "cleanupFail": "cleanup failed",
        "cleanupSuccess": "cleanup successful",
        "deleteFail": "failed to delete",
        "success": "backup completed"
      },
      "cutoff": {
        "description": "cut website logs and keep specified amount",
        "paramFail": "website domain name and keep amount are required",
        "start": "start cutting",
        "targetSite": "target website",
        "siteNotExist": "website does not exist",
        "logNotExist": "log file does not exist",
        "backupFail": "backup failed",
        "clearFail": "clearing failed",
        "cleanupFail": "cleanup failed",
        "clearLog": "clear log",
        "cutSuccess": "cutting successful",
        "cleanupSuccess": "cleanup successful",
        "end": "cutting completed"
      },
      "installPlugin": {
        "description": "install plugin",
        "paramFail": "plugin slug is required",
        "success": "task has been submitted"
      },
      "uninstallPlugin": {
        "description": "uninstall plugin",
        "paramFail": "plugin slug is required",
        "success": "task has been submitted"
      },
      "updatePlugin": {
        "description": "update plugin",
        "paramFail": "plugin slug is required",
        "success": "task has been submitted"
      },
      "addSite": {
        "description": "add website [domain name and port separated by commas]",
        "paramFail": "name, domain, port and path are required",
        "siteExist": "website already exists",
        "success": "website added successfully"
      },
      "removeSite": {
        "description": "remove website",
        "paramFail": "name is required",
        "siteNotExist": "website does not exist",
        "success": "website deleted successfully"
      },
      "init": {
        "description": "initialize the panel",
        "exist": "panel has been initialized",
        "success": "initialization successful",
        "adminFound": "failed to create administrator",
        "fail": "initialization failed"
      },
      "writePlugin": {
        "description": "write plugin installation status",
        "paramFail": "plugin slug and version are required",
        "fail": "failed to write plugin installation status",
        "success": "plugin installation status written successfully"
      },
      "deletePlugin": {
        "description": "delete plugin installation status",
        "paramFail": "plugin slug is required",
        "fail": "failed to remove plugin installation status",
        "success": "plugin installation status removed successfully"
      },
      "writeMysqlPassword": {
        "description": "write MySQL root password",
        "paramFail": "MySQL root password is required",
        "fail": "failed to write MySQL root password",
        "success": "MySQL root password written successfully"
      },
      "writeSite": {
        "description": "write website data to the panel",
        "paramFail": "name and path are required",
        "siteExist": "website already exists",
        "pathNotExist": "website directory does not exist",
        "fail": "failed to write to website",
        "success": "writing to website successfully"
      },
      "deleteSite": {
        "description": "delete panel website data",
        "paramFail": "website name is required",
        "fail": "failed to delete website",
        "success": "website deleted successfully"
      },
      "getSetting": {
        "description": "get panel setting data",
        "paramFail": "key is required"
      },
      "writeSetting": {
        "description": "write/update panel setting data",
        "paramFail": "key and value are required",
        "fail": "Writing settings failed",
        "success": "settings written successfully"
      },
      "deleteSetting": {
        "description": "delete panel setting data",
        "paramFail": "key is required",
        "fail": "failed to delete settings",
        "success": "settings deleted successfully"
      }
    },
    "panel:task": {
      "description": "[Panel] Daily tasks"
    }
  },
  "errors": {
    "internal": "internal system error",
    "plugin": {
      "notExist": "plugin does not exist",
      "notInstalled": "plugin :slug is not installed",
      "dependent": "plugin :slug requires dependency :dependency",
      "incompatible": "plugin :slug is incompatible with :exclude plugin"
    }
  },
  "status": {
    "upgrade": "Panel is currently undergoing an upgrade. Please try again later.",
    "maintain": "Panel is currently undergoing maintenance. Please try again later.",
    "closed": "Panel is closed.",
    "failed": "Panel encountered an error during operation. Please check the troubleshooting or contact support."
  }
}