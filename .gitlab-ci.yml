image: golang:1.23-bookworm

# 在每个任务执行前运行
before_script:
  - mkdir -p .go
  - go version
  - go env -w GO111MODULE=on
  - go env -w GOPROXY=https://goproxy.cn,direct

.go_cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  cache:
    paths:
      - .go/pkg/mod/

stages:
  - prepare
  - build
  - release

golangci_lint:
  stage: prepare
  image: golangci/golangci-lint:latest-alpine
  extends: .go_cache
  allow_failure: true
  script:
    - golangci-lint run --timeout 30m

unit_test:
  stage: prepare
  extends: .go_cache
  allow_failure: true
  script:
    - rm -rf /etc/apt/sources.list
    - rm -rf /etc/apt/sources.list.d/*
    - wget -O /etc/apt/sources.list https://mirrors.ustc.edu.cn/repogen/conf/debian-http-4-bookworm
    - apt-get update
    - apt-get install -y curl jq
    - cp panel-example.conf .env
    - echo "DB_FILE=$(pwd)/storage/panel.db" >> .env
    - go run . artisan key:generate
    - go test -v -coverprofile=coverage.txt -covermode=atomic ./...

build:
  stage: build
  extends: .go_cache
  script:
    - go mod download
    - CGO_ENABLED=0 go build -ldflags '-s -w --extldflags "-static"' -tags='nomsgpack' -o panel
  artifacts:
    name: "panel"
    paths:
      - panel
    expire_in: 3 days

fetch:
  stage: build
  image: alpine:latest
  before_script:
    - sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories
    - apk add --no-cache curl jq unzip zip
  script:
    - curl -sSL "https://git.haozi.net/api/v4/projects/opensource%2Fpanel-frontend/releases" | jq -r '.[0].assets.links[] | select(.name | contains("dist")) | .direct_asset_url' | xargs curl -L -o frontend.zip
    - unzip frontend.zip
    - mv dist/* embed/frontend/
  artifacts:
    name: "frontend"
    paths:
      - embed/frontend
    expire_in: 3 days

release:
  stage: release
  dependencies:
    - build
    - fetch
  image:
    name: goreleaser/goreleaser
    entrypoint: [ '' ]
  only:
    - tags
  variables:
    # Disable shallow cloning so that goreleaser can diff between tags to
    # generate a changelog.
    GIT_DEPTH: 0
  script:
    - sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories
    - apk add --no-cache upx
    - goreleaser release --clean
